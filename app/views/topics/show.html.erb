<div class="row">
   <div class="col-lg-8">

                <!-- the actual blog post: title/author/date/content -->
                <h1><%= @topic.question %></h1>
                <p class="lead">by 
									<% if @topic.user.nil? %>
									<%= "Anonymous" %>
									<% else %>
									<%= @topic.user.email %>
									<% end %>
                </p>
								<p> <%= @upcount %> debatians are supporting this</p>
								<p> <%= @downcount %> debatians are against it </p>
								
								<% if !@vote.blank? %>
								 <% if @vote.support
								 			@cas = "supporting"
							 			else
											@cas = "against"
										end
								 %>
								<p> You are <%= @cas %> this topic! </p>
								<% end %>
							
                <hr>
								<% if @vote.blank? %>
									<%= link_to "Support it", vote_topic_path(@topic, :support=> "true") , :method => :get, :class =>"btn btn-primary" %>
									<%= link_to "Against it", vote_topic_path(@topic, :support=> "false") , :method => :get, :class =>"btn btn-danger" %>
								<% end %>
									
                <p>
                    <span class="glyphicon glyphicon-time"></span> Posted on <%= @topic.created_at %></p>
                <hr>
                <!-- the comment box -->
								<div class="col-lg-6">
                	<!-- the comments -->
									<h4>Supporters Comments</h4>
									<hr/>
									<% @support_comment = @topic.comments.where(:user_id=>@voters) %>
									<% @support_comment.each do |comment| %>
	                <h5> <% if !comment.user.blank? %>
										<%= comment.user.email %>
										<% end %>
	                    <small><%= comment.created_at %></small>
	                </h5>
									<p><%= comment.body %></p>
									<% end %>
									<hr>
									<% if !@vote.blank? %>
									<% if @vote.support %>
                	<div class="well">
	                	
                    <h4>Leave a Comment:</h4>
										<%= form_for([@topic, @topic.comments.build]) do |f| %>
										  <div class="form-group">
										    <%= f.text_area :body, :class=>"form-control tags", :rows => 3 %>
										  </div>
										    <%= f.submit "Comment", :class=>"btn btn-primary" %>
										<% end %>
										
                	</div>
									<% end %>
									<% end %>
                	

                	
								</div>
								
								<div class="col-lg-6">
                	
									<h4>Against Comments</h4>
									<hr>
									<% @against_comments.each do |comment| %>
	                <h5> <% if !comment.user.blank? %>
										<%= comment.user.email %>
										<% end %>
	                    <small><%= comment.created_at %></small>
	                </h5>
									<p><%= comment.body %></p>
									<% end %>
									<hr>
									<% if !@vote.blank? %>
									<% if !@vote.support %>
                	<div class="well">
                    <h4>Leave a Comment:</h4>
										<%= form_for([@topic, @topic.comments.build]) do |f| %>
										  <div class="form-group">
										    <%= f.text_area :body, :class=>"form-control", :rows => 3 %>
										  </div>
										    <%= f.submit "Comment", :class=>"btn btn-primary" %>
										<% end %>
										
                	</div>
									<% end %>
									<% end %>
                	
								</div>
									
										
 </div>
 
 <script type="text/javascript">
 var availableTags = [
     "ActionScript",
     "AppleScript",
     "Asp",
     "BASIC",
     "C",
     "C++",
     "Clojure",
     "COBOL",
     "ColdFusion",
     "Erlang",
     "Fortran",
     "Groovy",
     "Haskell",
     "Java",
     "JavaScript",
     "Lisp",
     "Perl",
     "PHP",
     "Python",
     "Ruby",
     "Scala",
     "Scheme"
     ];

 function split(val) {
     return val.split(/@\s*/);
 }

 function extractLast(term) {
     return split(term).pop();
 }

 $(".tags")
 // don't navigate away from the field on tab when selecting an item
 .bind("keydown", function(event) {
     if (event.keyCode === $.ui.keyCode.TAB && $(this).data("autocomplete").menu.active) {
         event.preventDefault();
     }
 }).autocomplete({
     minLength: 0,
     source: function(request, response) {
         var term = request.term,
             results = [];
         if (term.indexOf("@") >= 0) {
             term = extractLast(request.term);
             if (term.length > 0) {
                 results = $.ui.autocomplete.filter(
                 availableTags, term);
             } else {
                 results = ['Start typing...'];
             }
         }
         response(results);
     },
     focus: function() {
         // prevent value inserted on focus
         return false;
     },
     select: function(event, ui) {
         var terms = split(this.value);
         // remove the current input
         terms.pop();
         // add the selected item
         terms.push(ui.item.value);
         // add placeholder to get the comma-and-space at the end
         terms.push("");
         this.value = terms.join("");
         return false;
     }
 });
 </script>

